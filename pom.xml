<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.georchestra</groupId>
		<artifactId>root</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>config</artifactId>
	<packaging>jar</packaging>
	<name>Configuration Project</name>
	<url>http://www.georchestra.org</url>
	<build>
		<filters>
			<filter>${basedir}/shared.maven.filters</filter>
			<filter>${build.support.dir}/shared.maven.filters</filter>
			<filter>${generated.output}/shared.maven.filters</filter>
		</filters>
		<resources>
			<resource>
				<directory>${basedir}/defaults</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>shared.maven.filters</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${conf.base}</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>build_support/**</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${generated.output}</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>/shared.maven.filters</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<overwrite>true</overwrite>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-config-files</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<scriptpath>
								<element>${build.support.dir}</element>
							</scriptpath>
							<source>
								log.info("Running groovy configuration generation scripts")
								def targetDir = new File("${project.build.directory}")
								targetDir.deleteDir()
								targetDir.mkdirs()
								def outputDir = new File("${generated.output}")
								def basedirFile = new File("${basedir}")
								def project = "${server}"
								def subTarget = "${sub.target}"
								def projectDir = new File("${conf.base}")
								def buildSupportDir = new File("${build.support.dir}")
								outputDir.deleteDir()
								outputDir.mkdirs()
								new File(outputDir, "shared.maven.filters").write("#place holder")
								try {
									new GenerateConfig().generate(
										project, log, ant, basedirFile, 
										project, subTarget, projectDir, 
										buildSupportDir, outputDir)
								} catch (ClassNotFoundException e) {
									log.info("No GenerateConfig class found so skipping generation step")
								}
								log.info("Finished running groovy configuration generation scripts")
							</source>
						</configuration>
					</execution>
					<execution>
						<id>tests</id>
						<phase>test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<scriptpath>
								<element>${basedir}/src/test/groovy</element>
							</scriptpath>
							<source>
								log.info("Running variable Substitution test")
								def targetDir = new File("${project.build.directory}")
								def basedirFile = new File("${basedir}")
								def project = "${server}"
								def subTarget = "${sub.target}"
								def projectDir = new File("${conf.base}")
								def buildSupportDir = new File("${build.support.dir}")
								def outputDir = new File("${project.build.outputDirectory}")
								new VariableSubstitutionTest().execute(
									project, log, ant, basedirFile, 
									project, subTarget, projectDir, 
									buildSupportDir, outputDir)
								log.info("Finished running variable substitution test")
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classifier>${server}</classifier>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
		</dependency>
	</dependencies>
	<properties>
		<generated.output>${basedir}/target/generated</generated.output>
		<conf.base>${basedir}/configurations/${server}</conf.base>
		<build.support.dir>${conf.base}/build_support/</build.support.dir>
	</properties>
</project>
